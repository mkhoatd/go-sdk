// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DataV1Curve data v1 curve
//
// swagger:model data.v1.Curve
type DataV1Curve string

func NewDataV1Curve(value DataV1Curve) *DataV1Curve {
	return &value
}

// Pointer returns a pointer to a freshly-allocated DataV1Curve.
func (m DataV1Curve) Pointer() *DataV1Curve {
	return &m
}

const (

	// CurveSecp256k1 captures enum value "CURVE_SECP256K1"
	CurveSecp256k1 DataV1Curve = "CURVE_SECP256K1"

	// CurveEd25519 captures enum value "CURVE_ED25519"
	CurveEd25519 DataV1Curve = "CURVE_ED25519"
)

// for schema
var DataV1CurveEnum []DataV1Curve

func init() {
	var res []DataV1Curve
	if err := json.Unmarshal([]byte(`["CURVE_SECP256K1","CURVE_ED25519"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		DataV1CurveEnum = append(DataV1CurveEnum, v)
	}
}

func (m DataV1Curve) validateDataV1CurveEnum(path, location string, value DataV1Curve) error {
	if err := validate.EnumCase(path, location, value, DataV1CurveEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this data v1 curve
func (m DataV1Curve) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDataV1CurveEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this data v1 curve based on context it is used
func (m DataV1Curve) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
