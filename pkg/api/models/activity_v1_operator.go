// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ActivityV1Operator activity v1 operator
//
// swagger:model activity.v1.Operator
type ActivityV1Operator string

func NewActivityV1Operator(value ActivityV1Operator) *ActivityV1Operator {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ActivityV1Operator.
func (m ActivityV1Operator) Pointer() *ActivityV1Operator {
	return &m
}

const (

	// ActivityV1OperatorOPERATOREQUAL captures enum value "OPERATOR_EQUAL"
	ActivityV1OperatorOPERATOREQUAL ActivityV1Operator = "OPERATOR_EQUAL"

	// ActivityV1OperatorOPERATORMORETHAN captures enum value "OPERATOR_MORE_THAN"
	ActivityV1OperatorOPERATORMORETHAN ActivityV1Operator = "OPERATOR_MORE_THAN"

	// ActivityV1OperatorOPERATORMORETHANOREQUAL captures enum value "OPERATOR_MORE_THAN_OR_EQUAL"
	ActivityV1OperatorOPERATORMORETHANOREQUAL ActivityV1Operator = "OPERATOR_MORE_THAN_OR_EQUAL"

	// ActivityV1OperatorOPERATORLESSTHAN captures enum value "OPERATOR_LESS_THAN"
	ActivityV1OperatorOPERATORLESSTHAN ActivityV1Operator = "OPERATOR_LESS_THAN"

	// ActivityV1OperatorOPERATORLESSTHANOREQUAL captures enum value "OPERATOR_LESS_THAN_OR_EQUAL"
	ActivityV1OperatorOPERATORLESSTHANOREQUAL ActivityV1Operator = "OPERATOR_LESS_THAN_OR_EQUAL"

	// ActivityV1OperatorOPERATORCONTAINS captures enum value "OPERATOR_CONTAINS"
	ActivityV1OperatorOPERATORCONTAINS ActivityV1Operator = "OPERATOR_CONTAINS"

	// ActivityV1OperatorOPERATORNOTEQUAL captures enum value "OPERATOR_NOT_EQUAL"
	ActivityV1OperatorOPERATORNOTEQUAL ActivityV1Operator = "OPERATOR_NOT_EQUAL"

	// ActivityV1OperatorOPERATORIN captures enum value "OPERATOR_IN"
	ActivityV1OperatorOPERATORIN ActivityV1Operator = "OPERATOR_IN"

	// ActivityV1OperatorOPERATORNOTIN captures enum value "OPERATOR_NOT_IN"
	ActivityV1OperatorOPERATORNOTIN ActivityV1Operator = "OPERATOR_NOT_IN"

	// ActivityV1OperatorOPERATORCONTAINSONE captures enum value "OPERATOR_CONTAINS_ONE"
	ActivityV1OperatorOPERATORCONTAINSONE ActivityV1Operator = "OPERATOR_CONTAINS_ONE"

	// ActivityV1OperatorOPERATORCONTAINSALL captures enum value "OPERATOR_CONTAINS_ALL"
	ActivityV1OperatorOPERATORCONTAINSALL ActivityV1Operator = "OPERATOR_CONTAINS_ALL"
)

// for schema
var activityV1OperatorEnum []interface{}

func init() {
	var res []ActivityV1Operator
	if err := json.Unmarshal([]byte(`["OPERATOR_EQUAL","OPERATOR_MORE_THAN","OPERATOR_MORE_THAN_OR_EQUAL","OPERATOR_LESS_THAN","OPERATOR_LESS_THAN_OR_EQUAL","OPERATOR_CONTAINS","OPERATOR_NOT_EQUAL","OPERATOR_IN","OPERATOR_NOT_IN","OPERATOR_CONTAINS_ONE","OPERATOR_CONTAINS_ALL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		activityV1OperatorEnum = append(activityV1OperatorEnum, v)
	}
}

func (m ActivityV1Operator) validateActivityV1OperatorEnum(path, location string, value ActivityV1Operator) error {
	if err := validate.EnumCase(path, location, value, activityV1OperatorEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this activity v1 operator
func (m ActivityV1Operator) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateActivityV1OperatorEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this activity v1 operator based on context it is used
func (m ActivityV1Operator) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
