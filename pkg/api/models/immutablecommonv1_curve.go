// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Immutablecommonv1Curve immutablecommonv1 curve
//
// swagger:model immutablecommonv1Curve
type Immutablecommonv1Curve string

func NewImmutablecommonv1Curve(value Immutablecommonv1Curve) *Immutablecommonv1Curve {
	return &value
}

// Pointer returns a pointer to a freshly-allocated Immutablecommonv1Curve.
func (m Immutablecommonv1Curve) Pointer() *Immutablecommonv1Curve {
	return &m
}

const (

	// Immutablecommonv1CurveCURVESECP256K1 captures enum value "CURVE_SECP256K1"
	Immutablecommonv1CurveCURVESECP256K1 Immutablecommonv1Curve = "CURVE_SECP256K1"

	// Immutablecommonv1CurveCURVEED25519 captures enum value "CURVE_ED25519"
	Immutablecommonv1CurveCURVEED25519 Immutablecommonv1Curve = "CURVE_ED25519"
)

// for schema
var immutablecommonv1CurveEnum []interface{}

func init() {
	var res []Immutablecommonv1Curve
	if err := json.Unmarshal([]byte(`["CURVE_SECP256K1","CURVE_ED25519"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		immutablecommonv1CurveEnum = append(immutablecommonv1CurveEnum, v)
	}
}

func (m Immutablecommonv1Curve) validateImmutablecommonv1CurveEnum(path, location string, value Immutablecommonv1Curve) error {
	if err := validate.EnumCase(path, location, value, immutablecommonv1CurveEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this immutablecommonv1 curve
func (m Immutablecommonv1Curve) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateImmutablecommonv1CurveEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this immutablecommonv1 curve based on context it is used
func (m Immutablecommonv1Curve) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
