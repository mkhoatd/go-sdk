// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// WebauthnV1AuthenticatorTransport webauthn v1 authenticator transport
//
// swagger:model webauthn.v1.AuthenticatorTransport
type WebauthnV1AuthenticatorTransport string

func NewWebauthnV1AuthenticatorTransport(value WebauthnV1AuthenticatorTransport) *WebauthnV1AuthenticatorTransport {
	return &value
}

// Pointer returns a pointer to a freshly-allocated WebauthnV1AuthenticatorTransport.
func (m WebauthnV1AuthenticatorTransport) Pointer() *WebauthnV1AuthenticatorTransport {
	return &m
}

const (

	// WebauthnV1AuthenticatorTransportAUTHENTICATORTRANSPORTBLE captures enum value "AUTHENTICATOR_TRANSPORT_BLE"
	WebauthnV1AuthenticatorTransportAUTHENTICATORTRANSPORTBLE WebauthnV1AuthenticatorTransport = "AUTHENTICATOR_TRANSPORT_BLE"

	// WebauthnV1AuthenticatorTransportAUTHENTICATORTRANSPORTINTERNAL captures enum value "AUTHENTICATOR_TRANSPORT_INTERNAL"
	WebauthnV1AuthenticatorTransportAUTHENTICATORTRANSPORTINTERNAL WebauthnV1AuthenticatorTransport = "AUTHENTICATOR_TRANSPORT_INTERNAL"

	// WebauthnV1AuthenticatorTransportAUTHENTICATORTRANSPORTNFC captures enum value "AUTHENTICATOR_TRANSPORT_NFC"
	WebauthnV1AuthenticatorTransportAUTHENTICATORTRANSPORTNFC WebauthnV1AuthenticatorTransport = "AUTHENTICATOR_TRANSPORT_NFC"

	// WebauthnV1AuthenticatorTransportAUTHENTICATORTRANSPORTUSB captures enum value "AUTHENTICATOR_TRANSPORT_USB"
	WebauthnV1AuthenticatorTransportAUTHENTICATORTRANSPORTUSB WebauthnV1AuthenticatorTransport = "AUTHENTICATOR_TRANSPORT_USB"

	// WebauthnV1AuthenticatorTransportAUTHENTICATORTRANSPORTHYBRID captures enum value "AUTHENTICATOR_TRANSPORT_HYBRID"
	WebauthnV1AuthenticatorTransportAUTHENTICATORTRANSPORTHYBRID WebauthnV1AuthenticatorTransport = "AUTHENTICATOR_TRANSPORT_HYBRID"
)

// for schema
var webauthnV1AuthenticatorTransportEnum []interface{}

func init() {
	var res []WebauthnV1AuthenticatorTransport
	if err := json.Unmarshal([]byte(`["AUTHENTICATOR_TRANSPORT_BLE","AUTHENTICATOR_TRANSPORT_INTERNAL","AUTHENTICATOR_TRANSPORT_NFC","AUTHENTICATOR_TRANSPORT_USB","AUTHENTICATOR_TRANSPORT_HYBRID"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		webauthnV1AuthenticatorTransportEnum = append(webauthnV1AuthenticatorTransportEnum, v)
	}
}

func (m WebauthnV1AuthenticatorTransport) validateWebauthnV1AuthenticatorTransportEnum(path, location string, value WebauthnV1AuthenticatorTransport) error {
	if err := validate.EnumCase(path, location, value, webauthnV1AuthenticatorTransportEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this webauthn v1 authenticator transport
func (m WebauthnV1AuthenticatorTransport) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWebauthnV1AuthenticatorTransportEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this webauthn v1 authenticator transport based on context it is used
func (m WebauthnV1AuthenticatorTransport) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
